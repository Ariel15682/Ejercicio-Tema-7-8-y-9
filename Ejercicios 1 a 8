
package invertircadena;

import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Vector;

/**
 * @author Ariel Diaz
 */

public class InvertirCadena {
    
    public static void main(String[] args) throws FileNotFoundException {
        
        //Ejercicio 0
        System.out.println("EJERCICIO 0");
        
        String cadena = "Mensaje de texto";
        
        //Opcion 1
        System.out.println("OPCION 1");
        System.out.println(reverse(cadena));
        
        System.out.println("");
        
        //Opcion 2
        System.out.println("OPCION 2");
        System.out.println(invertirCadena(cadena));
        
        
        System.out.println("");
        
        //Ejercicio 1-Opcion 1
        System.out.println("EJERCICIO 1-Opcion1");
        
        //Declaro el primer array
        String [] array = new String[3];
        
        //Cargo el primer array
        array[0] = "Antonio";
        array[1] = "Jose";
        array[2] = "Juan";
        
        //for tradicional para mostrar valores de array
        for(int i = 0; i < array.length; i++){
            System.out.println(array[i]);
        }
        
        System.out.println("");
        
        //Opcion 2
        System.out.println("OPCION 2");
        
        //Declaro y cargo el array 2
        String array2[] = {"Francisco", "Pepe", "Toni"};
        
        //for each para recorer y mostrar valores del array2
        for(String nombres : array2){
            System.out.println(nombres);
        }    
        
        System.out.println("");
        
        //Ejercicio 2
        System.out.println("EJERCICIO 2");
        
        int arrayBidimensional [][] = {
                                       {1,2,3,4,5},
                                       {6,7,8,9,0},
                                       {11,20,30,40}
        };
        
        //Recorro el array bidimensional y muestro posicion y valores
        for(int i = 0; i < arrayBidimensional.length; i++){
            for(int j = 0; j < arrayBidimensional[i].length; j++){ //[i] o [0]
                System.out.println("La posicion de 'i' es: " + i + " la posicion de 'j' es: " + j + " y el valor: " + arrayBidimensional[i][j]);
            }
        }
        
               
        System.out.println("");
        
        //Ejercicio 3
        System.out.println("EJERCICIO 3");
        
        //Creo una instancia de Vector
        Vector <Integer> vector = new Vector<Integer>();
        
        //Cargo valores manualmente en el vector
        vector.add(100);//pos 0
        vector.add(200);//pos 1
        vector.add(300);//pos 2
        vector.add(400);//pos 3
        vector.add(500);//pos 4
        
        //Elimino la posicion 2 y 3 del vector
        vector.remove(2);//esta es la posicion 2 original(300)
        vector.remove(2);//esta es la posicion 3 original (400) que luego de borrar el indice 2 se transforma este en indice 2 tambien
        
        //Muestro los valores del vector
        System.out.println(vector);
        //Muestro el tamaño y la capacidad del vector
        System.out.println("Tamaño: " + vector.size() + " - Capacidad: " + vector.capacity());
                
        System.out.println("");
        
        //Ejercicio 4
        System.out.println("EJERCICIO 4");
        
        System.out.println("Creo que el problema seria que a medida que se van cargando los elementos ");
        System.out.println("se van creando copias del vector, incrementando asi su capacidad por defecto ");
        System.out.println("de 10 en 10, duplicandolo hasta 100 veces con el consecuente consumo ");
        System.out.println("de recursos de memoria y enlentecimiento o 'pesadez' de la aplicacion");
        
        System.out.println("");
        
        //Ejercicio 5
        System.out.println("EJERCICIO 5");
        
        //Creo un ArrayList de String
        ArrayList<String> arrayList = new ArrayList<String>();
        
        //Cargo elementos en el arrayList
        arrayList.add("Juan"); 
        arrayList.add("Pepe");
        arrayList.add("Pedro");
        arrayList.add("Ariel");
        
        //Creo una instancia de LinkedList<String>
        LinkedList<String> linkedList = new LinkedList<String>();
        
        //Recorro el arrayList, obtengo su valor y lo copio a un linkedList
        for( int i = 0; i < arrayList.size(); i++){
            String nombre = arrayList.get(i);
            System.out.println(nombre);
            linkedList.add(nombre);
            System.out.println(linkedList.get(i));
        }
        
        //Muestro los valores del arrayList y del linkedList
        System.out.println(arrayList.toString());
        System.out.println(linkedList.toString());
        
        System.out.println("");
        
        //Ejercicio 6
        System.out.println("EJERCICIO 6");
        
        //Creo una instancia de un ArrayList de enteros
        ArrayList<Integer> arrayList2 = new ArrayList<Integer>();
        
        int i = 0;
        while(i < 10){
            arrayList2.add(i + 1);
            i++;
        }
        
        //Muestro como queda cargado el arrayList2        
        System.out.println(arrayList2.toString());
        
        //Recorro el arrayList2 verificando cuales son pares y los elimino
        i = 0;
        while(i < arrayList2.size()){
            if(arrayList2.get(i) % 2 == 0){
                arrayList2.remove(i);
            }
            i++;
        }
        
        //Muestro como queda el arrayList2 sin pares
        System.out.println(arrayList2.toString());
        
        System.out.println("");
        
        //Ejercicio 7
        System.out.println("EJERCICIO 7"); 
        
        DividePorCero(6);
        
        System.out.println("");
        
        //Ejercicio 8 - Tengo la version 8 de JAVA y tuve que implementarlo diferente
        System.out.println("EJERCICIO 8"); 
        
        FileInputStream in = new FileInputStream("/Users/QSP/Desktop/original.txt"); //%userprofile%
                  
        PrintStream out = new PrintStream("/Users/QSP/Desktop/otraCopia.txt");
              
        CopyFile(in, out);
        
        System.out.println("");
        
        //Ejercicio 9
        System.out.println("EJERCICIO 9");
        //https://github.com/Ariel15682/Ejercicio-Tema-7-8-y-9.git
        System.out.println("Enlace para el punto 9");
        System.out.println("https://github.com/Ariel15682/Ejercicio-Tema-7-8-y-9.git");
        
        
    }

    
    //Opcion 1 Invertir Cadena
    public static String reverse(String cadena) {
        
        String cadenaInvertida = "";
        
        for(int i = cadena.length()-1; i >= 0; i-- ){
                        
            cadenaInvertida = cadenaInvertida + cadena.charAt(i);
        }
        
        return cadenaInvertida;
    }
    
    //Opcion 2 Invertir cadena
    public static String invertirCadena(String cadena) {
            
        String cadenaInvertida2 = "";
            
        for(int i = cadena.length()-1; i >= 0; i-- ){                
                
            cadenaInvertida2 = cadenaInvertida2.concat(String.valueOf(cadena.charAt(i)));
        }
            
        return cadenaInvertida2;
    }
    
    public static void DividePorCero(int valorDividendo) throws ArithmeticException{
        int resultado = 0;
        try {
            resultado = valorDividendo / 0;
            System.out.println(valorDividendo + " / 0 = " + resultado);
        }catch(ArithmeticException excepcionAritmetica){
            System.out.println("Esto no puede hacerse: " + "' Division " +  excepcionAritmetica.getMessage() + "'");
        }finally{System.out.println("Fin");} 
    }
    
    public static void CopyFile (FileInputStream fileIn, PrintStream fileOut){
        
        int dato = 0;
        String datos = "";
        
        try{ 
            dato = fileIn.read();
            System.out.print((char)dato);
            while (dato != -1){
                datos = datos + (char)dato; //Opcion 1 - leer archivo
                //datos = datos.concat(String.valueOf((char)dato)); //Opcion 2 - leer archivo
                fileOut.write((char)dato); //Opcion 1 - copia archivo con print 
                dato = fileIn.read();
                System.out.print((char)dato);
            }
                fileOut.print(datos); //Opcion 2 - copia archivo con write
                System.out.println("");
                System.out.println(datos);
                
                fileIn.close();
                fileOut.close();
                
        }catch(Exception excepcion){
            System.out.println("Error " + excepcion.getMessage());
        }   
    }
}  
